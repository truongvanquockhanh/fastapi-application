"""Initial migration

Revision ID: 416d3fdd724b
Revises: 04a94bbc799f
Create Date: 2025-04-03 13:24:29.960536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '416d3fdd724b'
down_revision: Union[str, None] = '04a94bbc799f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bug', sa.Column('projectId', sa.UUID(), nullable=False))
    op.add_column('bug', sa.Column('priority', sa.Enum('low', 'medium', 'high', name='priorityenum'), nullable=False))
    op.add_column('bug', sa.Column('isResolved', sa.Boolean(), nullable=False))
    op.add_column('bug', sa.Column('closedById', sa.UUID(), nullable=True))
    op.add_column('bug', sa.Column('closedAt', sa.DateTime(), nullable=True))
    op.add_column('bug', sa.Column('reopendById', sa.UUID(), nullable=True))
    op.add_column('bug', sa.Column('reopendAt', sa.DateTime(), nullable=True))
    op.add_column('bug', sa.Column('createdById', sa.UUID(), nullable=False))
    op.add_column('bug', sa.Column('updatedById', sa.UUID(), nullable=False))
    op.drop_constraint('bug_project_id_fkey', 'bug', type_='foreignkey')
    op.create_foreign_key(None, 'bug', 'user', ['updatedById'], ['id'])
    op.create_foreign_key(None, 'bug', 'project', ['projectId'], ['id'])
    op.create_foreign_key(None, 'bug', 'user', ['createdById'], ['id'])
    op.create_foreign_key(None, 'bug', 'user', ['reopendById'], ['id'])
    op.create_foreign_key(None, 'bug', 'user', ['closedById'], ['id'])
    op.drop_column('bug', 'project_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bug', sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'bug', type_='foreignkey')
    op.drop_constraint(None, 'bug', type_='foreignkey')
    op.drop_constraint(None, 'bug', type_='foreignkey')
    op.drop_constraint(None, 'bug', type_='foreignkey')
    op.drop_constraint(None, 'bug', type_='foreignkey')
    op.create_foreign_key('bug_project_id_fkey', 'bug', 'project', ['project_id'], ['id'])
    op.drop_column('bug', 'updatedById')
    op.drop_column('bug', 'createdById')
    op.drop_column('bug', 'reopendAt')
    op.drop_column('bug', 'reopendById')
    op.drop_column('bug', 'closedAt')
    op.drop_column('bug', 'closedById')
    op.drop_column('bug', 'isResolved')
    op.drop_column('bug', 'priority')
    op.drop_column('bug', 'projectId')
    # ### end Alembic commands ###
